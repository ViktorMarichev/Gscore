import React, { useEffect, useState } from "react";
import { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import MainLayout from "@components/MainLayout";
import Container from "@components/Container";
import styled from "styled-components";
import ProductView from "@components/ProductView/ProductView";
import { Products as ProductsApi } from "@api/products";
import ProductType from "../src/types/product";
import { GetServerSideProps, NextPageContext } from "next";
import { wrapper } from "src/redux/store";
import { AxiosResponse } from "axios";
import { useAppDispatch, useAppSelector } from "../src/redux/store";
import { setProducts, ProductsSelectors } from "src/redux/Products";
import { login } from "src/redux/User";
import Product from "src/types/product";

type ProductsPageProps = {
  serverProducts: Array<ProductType>;
  props: any;
};

const ProductsPage: NextPage<ProductsPageProps> = ({ serverProducts }) => {
  const dispatch = useAppDispatch();
  const userData = useAppSelector((state) => state.user);
  const [loaded, setLoaded] = useState(false);
  const [products, setProductsState] = useState<Array<Product>>(serverProducts);
  /* const products = useAppSelector((state) =>
    ProductsSelectors.getProducts(state)
  );*/

  useEffect(() => {
    async function loadProducts() {
      const res: AxiosResponse = await ProductsApi.getProducts();
      const data = res.data;

      setProductsState(data);
      alert(JSON.stringify(products));
      dispatch(setProducts({ products: data }));
    }
    if (serverProducts.length === 0) {
      loadProducts();
    }
  }, []);
  if (!products) {
    return (
      <>
        <Head>
          <title>Get started with Gscore today!</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Container>
          {" "}
          <Wrapper>
            <Title>Get started with Gscore today!</Title>
            Loading...
          </Wrapper>
        </Container>
      </>
    );
  }

  return (
    <>
      <Head>
        <title>Get started with Gscore today!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <MainLayout>
          <Wrapper>
            <Title>Get started with Gscore today!</Title>
            <Products>
              {products.map((product: ProductType, index) => {
                console.log(product);
                return (
                  <ProductViewWrapper key={product.id}>
                    <ProductView
                      style={index == 1 ? "light" : "dark"}
                      price={Number(product.prices[0].price)}
                      id={product.id}
                      name={product.name}
                      sitesCount={product.sitesCount}
                    />
                  </ProductViewWrapper>
                );
              })}
            </Products>

            <Notice>
              Have more than 10 sites?
              <Ref>Contact us</Ref>
            </Notice>
          </Wrapper>
        </MainLayout>
      </Container>
    </>
  );
};

ProductsPage.getInitialProps = wrapper.getInitialPageProps(
  (store) => async (stx: NextPageContext) => {
    if (!stx.req) return { serverProducts: [] };
    // Fetch data from external API
    try {
      const res: AxiosResponse = await ProductsApi.getProducts();
      const data = res.data;
      console.log("log", data);
      //  store.dispatch(setProducts({ products: data }));
      // Pass data to the page via props
      return { serverProducts: data };
    } catch (error) {
      console.log("error.message");
      return { serverProducts: [] };
    }
  }
);
const Wrapper = styled.div`
  padding: 16px 0px 42px 0px;
`;
const Title = styled.div`
  font-family: "THICCCBOI-bold";
  font-style: normal;
  font-size: 44px;
  color: #ffffff;
  width: 100%;
  text-align: center;
  padding-bottom: 98.23px;
`;
const Products = styled.div`
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
`;
const ProductViewWrapper = styled.div`
  margin-right: 28.5px;
`;
const Notice = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: "THICCCBOI-medium";
  font-size: 18px;
  color: #ffffff;
`;
const Ref = styled.div`
  text-decoration-line: underline;
  margin-top: 1px;
  color: #fc5842;
  line-height: 30px;
`;

export default ProductsPage;
